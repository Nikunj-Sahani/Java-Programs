----------------><------------------><--------------------


<|>  𝐓𝐲𝐩𝐞 𝐂𝐚𝐬𝐭𝐢𝐧𝐠 / 𝐃𝐚𝐭𝐚 𝐓𝐲𝐩𝐞 𝐂𝐨𝐧𝐯𝐞𝐫𝐬𝐢𝐨𝐧  <|>
       :: It is a process of convert a variable from one data type to another data type.
       :: Two types of type casting.

   :𝟏: 𝙄𝙢𝙥𝙡𝙞𝙘𝙞𝙩 𝙏𝙮𝙥𝙚 𝘾𝙖𝙨𝙩𝙞𝙣𝙜 (𝙒𝙞𝙙𝙚𝙣𝙞𝙣𝙜)::--
          :: Automatic Conversion
          :: It converts a smaller data type to larger one.

    𝙹𝚊𝚟𝚊 𝙲𝚘𝚍𝚎 -->>
          class Main 
          {
             public static void main(String[] args) 
             {
               int x = 1000;
               long l = x;
               System.out.println(x);
             }
           }

   :𝟐: 𝙀𝙭𝙥𝙡𝙞𝙘𝙞𝙩 𝙏𝙮𝙥𝙚 𝘾𝙖𝙨𝙩𝙞𝙣𝙜 (𝙉𝙖𝙧𝙧𝙤𝙬𝙞𝙣𝙜) ::--
          :: Manually conversion
          :: It converts a larger data type to smaller one.

    𝙹𝚊𝚟𝚊 𝙲𝚘𝚍𝚎 -->>
          class Main 
          {
             public static void main(String[] args) 
             {
               int x = 500;
               byte b = (byte)x;
               System.out.println(x);
             }
           }

if you do without manual data type , output is lossy.
check out with this code.

          class Main 
          {
             public static void main(String[] args) 
             {
               int x = 500;
               byte b = x;
               System.out.println(x);
             }
           }

// output you got with lossy conversion.

------------------><------------------><----------------------

|<>| 𝐏𝐫𝐚𝐜𝐭𝐢𝐜𝐚𝐥 𝐜𝐨𝐝𝐞 -->>

 class Main
 {
     public static void main (String []args )
     {
         // It is widening type casting ,, It convert smaller to larger.
              int i = 20;
              long l = i;

         // It is Explicit type casting ,, It convert larger to smaller.
              long x = 100;
              int y = (int) x;

         // It is a lossy conversion , you have care of it.
              long w = 1000;
              byte z = (byte) w;

         System.out.println(l);
         System.out.println(y);
         System.out.println(z);

     }
 }


------------------><------------------><----------------------



